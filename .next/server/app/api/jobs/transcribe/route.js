"use strict";(()=>{var e={};e.id=804,e.ids=[804],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8678:e=>{e.exports=import("pg")},7472:(e,t,a)=>{a.a(e,async(e,r)=>{try{a.r(t),a.d(t,{originalPathname:()=>h,patchFetch:()=>d,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>y,staticGenerationAsyncStorage:()=>l});var s=a(9303),i=a(8716),n=a(670),o=a(630),c=e([o]);o=(c.then?(await c)():c)[0];let u=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/jobs/transcribe/route",pathname:"/api/jobs/transcribe",filename:"route",bundlePath:"app/api/jobs/transcribe/route"},resolvedPagePath:"C:\\Users\\nicho\\OneDrive\\Desktop\\SyncedUpCallAI\\src\\app\\api\\jobs\\transcribe\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:y}=u,h="/api/jobs/transcribe/route";function d(){return(0,n.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:l})}r()}catch(e){r(e)}})},630:(e,t,a)=>{a.a(e,async(e,r)=>{try{a.r(t),a.d(t,{POST:()=>o});var s=a(7070),i=a(6341),n=e([i]);async function o(e){if(e.headers.get("authorization")!==`Bearer ${process.env.JOBS_SECRET}`)return s.NextResponse.json({ok:!1},{status:401});let{callId:t,recordingUrl:a}=await e.json();async function r(){let e=await fetch("https://api.deepgram.com/v1/listen?punctuate=true&diarize=true&utterances=true&detect_language=true",{method:"POST",headers:{Authorization:`Token ${process.env.DEEPGRAM_API_KEY}`,"Content-Type":"application/json"},body:JSON.stringify({url:a})});if(!e.ok)throw Error("deepgram_failed");let r=await e.json(),s=r.results?.channels?.[0]?.alternatives?.[0]?.transcript??"",n=r.results?.utterances??[];await i.db.none(`
      insert into transcripts(call_id, engine, text, redacted, diarized, words)
      values($1,'deepgram',$2,$2,$3,$4)
      on conflict (call_id) do update set text=$2, redacted=$2, diarized=$3, words=$4
    `,[t,s,JSON.stringify(n),JSON.stringify(r.results)])}async function n(){let e=await fetch("https://api.assemblyai.com/v2/transcribe",{method:"POST",headers:{Authorization:process.env.ASSEMBLYAI_API_KEY,"Content-Type":"application/json"},body:JSON.stringify({audio_url:a,speaker_labels:!0,punctuate:!0,format_text:!0})});if(!e.ok)throw Error("assemblyai_submit_failed");let r=await e.json();for(let e=0;e<40;e++){await new Promise(e=>setTimeout(e,3e3));let e=await fetch(`https://api.assemblyai.com/v2/transcribe/${r.id}`,{headers:{Authorization:process.env.ASSEMBLYAI_API_KEY}}),a=await e.json();if("completed"===a.status){let e=a.text||"",r=a.utterances||[];await i.db.none(`
          insert into transcripts(call_id, engine, text, redacted, diarized, words)
          values($1,'assemblyai',$2,$2,$3,$4)
          on conflict (call_id) do update set text=$2, redacted=$2, diarized=$3, words=$4
        `,[t,e,JSON.stringify(r),JSON.stringify(a)]);return}if("error"===a.status)throw Error("assemblyai_failed")}throw Error("assemblyai_timeout")}try{await r()}catch(e){try{await n()}catch(e){return s.NextResponse.json({ok:!1,error:String(e)},{status:502})}}return await i.db.none("insert into call_events(call_id,type) values($1,'transcribed')",[t]),await fetch(`${process.env.APP_URL}/api/jobs/analyze`,{method:"POST",headers:{Authorization:`Bearer ${process.env.JOBS_SECRET}`,"Content-Type":"application/json"},body:JSON.stringify({callId:t})}),s.NextResponse.json({ok:!0})}i=(n.then?(await n)():n)[0],r()}catch(e){r(e)}})},6341:(e,t,a)=>{a.a(e,async(e,r)=>{try{a.d(t,{db:()=>o});var s=a(8678),i=e([s]);let n=new(s=(i.then?(await i)():i)[0]).default.Pool({connectionString:process.env.DATABASE_URL}),o={query:(e,t)=>n.query(e,t),one:async(e,t)=>(await n.query(e,t)).rows[0],oneOrNone:async(e,t)=>(await n.query(e,t)).rows[0]||null,none:async(e,t)=>{await n.query(e,t)}};r()}catch(e){r(e)}})}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[276,972],()=>a(7472));module.exports=r})();